//: [Previous](@previous)

import Foundation

//: ### Функции как замыкания


//: Отбираем числа меньше заданного значения

func filterLessThanValue(value: Int, numbers: [Int]) -> [Int] {
    var filteredListOfNumbers: [Int] = []
    for number in numbers {
        if number < value {
            filteredListOfNumbers.append(number)
        }
    }
    return filteredListOfNumbers
}

let someValue = 5
let numbers = [5, 8, 20, 13, 1, 4, 3, 6]

filterLessThanValue(value: someValue, numbers: numbers)

//: Отбираем числа больше заданного значения



//: Функция для отбора чисел, относительно заданного значения



//: Функция для отбора числе меньше указанного значения



//: Функция для отбора числе больше указанного значения



//: Отбор чисел меньше указанного значения



//: Отбор чисел больше указанного значения



//: ### Замыкающие выражения

/*:
 
 Замыкания бывают трех видов:
 
 - Глобальные функции — это замыканиями, у которых есть имя и которые не захватывают никакие значения.
 
 - Вложенные функции — это замыканиями, у которых тоже есть имя, но при этом они могут использовать или захватывать значения из родительской функции.
 
 - Замыкающие выражения - это безымянные функции, которые написаны в облегченном синтаксисе, которые могут захватывать значения из окружающего контекста
 
 */


/*:
    { (параметры) -> тип результата in
        тело замыкающего выражения
    }
 */



/*:
 Изпользование замыкания в качестве аргумента
 
 Отбор чисел меньше указанного значения
 */



//: Отбор чисел больше указанного значения



//: Вывод типа из контекста



//: Неявные возвращаемые значения из замыканий с одним выражением



//: Сокращенные имена параметров



//: Последующее замыкание



//: Операторные функции


